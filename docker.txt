Docker :


	1. Why docker ?
		
		To install and run your software , 
		not just on your computer or laptop but on any other PC as well (on any cloud based computing platform)

		Docker makes it really easy to install and run software without worrying about setup or dependencies 


	2. Docker image 

		It is single file with all dependencies and configurations required to run a specific program

	3. Container 

		It is running instance of an image

	Docker consist of a client (Docker cli) and server (Docker daemon)
		User interacts with client and types in all the commands, these are then sent to docker daemon.
		Docker daemon handles many task like 
			- building an image,
			- creating & running a container,
			- pushing and downloading an images

	Docker is based upon linux concepts :
		1. Namespaces : 
		2. Control groups (cgroup) : 

	Docker image consist of FS snapshot and info about first command to execute.
		
	Containers are isolated from each other.

	Docker image is build from Dockerfile

		It consists of instructions and arguments 
		Should specify a base image, commands to install dependencies and startup command of container


		Sample Dockerfile content:

			FROM ubuntu:latest

			RUN mkdir -p /home/HelloWorld

			COPY ./Hello /home/HelloWorld/

			CMD /home/HelloWorld/Hello

		FROM - Specifies a base image
		RUN  - used to install dependencies 
		CMD  - Specifies a startup commands

		At each step a container is created from the previos step image and modifications are made
		to this instance, container is saved into intermediate image.

		Ex: Here Ubuntu base image is used to create a container,
		mkdir cmd is run, container is saved into image, say {image1}
		New container is created from {image1}, COPY cmd is run, again saved into {image2}
		Container is created from {image2}, CMD command is added as startup command, saved as {image3}.
		{image3} is the final output image.


		To build image from docker file
		$sudo docker build . 		//This will create an image with id

		To tag an image with readable name (<DockerID/Project:Version>)
		$sudo docker -t Tarun097/CppHelloWorld:latest


	New image can be created from running instance of container.
		$sudo docker commit -c 'CMD ["startup-cmd"]' <container-id>
				


Commands :

	Docker run <image-name>
		//Creates and run a container based on images. Run is equal to create container and start container

	Docker run <image-name> <command>
		//This will replace the startup command within container with specified command

	Docker run -it <image-name>
		//attach the input to container's input

	Docker create <image-name>
		//Creates a container and returns it's ID

	Docker start -a <Container_ID>
		//Starts a container of specified ID, -a options tracks the container output

	Docker logs <Container_ID>
		//Retrives logs (output of that container instance) , can be used if container started with -a option
	
	Docker ps
		//List all the running container

	Docker ps --all
		//List down all the containers run untill now

	Docker system prune
		//Deletes all the containers in stopped state

	Docker stop <Container_ID>
		//Send a SIGTERM (terminate signal) to container, allowing it to perform cleanup and stop
		//If container does not responds to SIGTERM, after 10 seconds , a SIGKILL is issued

	Docker kill <Container_ID>
		//Send a SIGKILL command to kill that container instantly

	Docker exec -it <Container_ID> <Command_you_want_to_run_inside_container>
		//Runs another command inside the container, -it attaches the input to container's input stream




		
